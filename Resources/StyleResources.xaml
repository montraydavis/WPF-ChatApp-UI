<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:QNAGen.Converters"
                    xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit">

    <!-- Color Definitions -->
    <Color x:Key="SecondaryColor">#47327d</Color>
    <Color x:Key="WhiteColor">#ffffff</Color>
    <Color x:Key="WhiteSecondaryColor">#F2F2F2</Color>
    <Color x:Key="BlackPrimaryColor">#121212</Color>
    <Color x:Key="BlackSecondaryColor">#1f1f1f</Color>
    <Color x:Key="BlackGrayColor">#1E1E1E</Color>
    <Color x:Key="GrayLightColor">#AAA</Color>
    <Color x:Key="GrayColor">#464646</Color>
    <Color x:Key="GrayDarkColor">#333333</Color>
    <Color x:Key="GrayDarkerColor">#262626</Color>
    <Color x:Key="PurpleColor">#47327D</Color>
    <Color x:Key="PurpleLightColor">#7753D0</Color>
    <Color x:Key="LightGrayColor">#a2a2a2</Color>
    <Color x:Key="PurpleBlueColor">#5E62B4</Color>
    <Color x:Key="PurpleDarkerColor">#34303E</Color>
    <Color x:Key="RedColor">#FF2C46</Color>
    <Color x:Key="DarkRedColor">#3e0505</Color>
    <Color x:Key="LightRedColor">#cf6679</Color>
    <Color x:Key="LightYellowColor">#fbca79</Color>
    <Color x:Key="BlackGrayDarkColor">#2b2b2b</Color>
    <Color x:Key="BlackGrayGridColor">#222222</Color>
    <Color x:Key="BlackDarkColor">#212121</Color>
    <Color x:Key="LightGreenColor">#39c7a1</Color>
    <Color x:Key="OrangeColor">#d8743d</Color>
    <Color x:Key="BlackRowColor">#101010</Color>

    <!-- Brush Definitions -->
    <SolidColorBrush x:Key="SecondaryBrush" Color="{StaticResource SecondaryColor}"/>
    <SolidColorBrush x:Key="WhiteBrush" Color="{StaticResource WhiteColor}"/>
    <SolidColorBrush x:Key="WhiteSecondaryBrush" Color="{StaticResource WhiteSecondaryColor}"/>
    <SolidColorBrush x:Key="BlackPrimaryBrush" Color="{StaticResource BlackPrimaryColor}"/>
    <SolidColorBrush x:Key="BlackSecondaryBrush" Color="{StaticResource BlackSecondaryColor}"/>
    <SolidColorBrush x:Key="BlackGrayBrush" Color="{StaticResource BlackGrayColor}"/>
    <SolidColorBrush x:Key="GrayLightBrush" Color="{StaticResource GrayLightColor}"/>
    <SolidColorBrush x:Key="GrayBrush" Color="{StaticResource GrayColor}"/>
    <SolidColorBrush x:Key="GrayDarkBrush" Color="{StaticResource GrayDarkColor}"/>
    <SolidColorBrush x:Key="GrayDarkerBrush" Color="{StaticResource GrayDarkerColor}"/>
    <SolidColorBrush x:Key="PurpleBrush" Color="{StaticResource PurpleColor}"/>
    <SolidColorBrush x:Key="PurpleLightBrush" Color="{StaticResource PurpleLightColor}"/>
    <SolidColorBrush x:Key="LightGrayBrush" Color="{StaticResource LightGrayColor}"/>
    <SolidColorBrush x:Key="PurpleBlueBrush" Color="{StaticResource PurpleBlueColor}"/>
    <SolidColorBrush x:Key="PurpleDarkerBrush" Color="{StaticResource PurpleDarkerColor}"/>
    <SolidColorBrush x:Key="RedBrush" Color="{StaticResource RedColor}"/>
    <SolidColorBrush x:Key="DarkRedBrush" Color="{StaticResource DarkRedColor}"/>
    <SolidColorBrush x:Key="LightRedBrush" Color="{StaticResource LightRedColor}"/>
    <SolidColorBrush x:Key="LightYellowBrush" Color="{StaticResource LightYellowColor}"/>
    <SolidColorBrush x:Key="BlackGrayDarkBrush" Color="{StaticResource BlackGrayDarkColor}"/>
    <SolidColorBrush x:Key="BlackGrayGridBrush" Color="{StaticResource BlackGrayGridColor}"/>
    <SolidColorBrush x:Key="BlackDarkBrush" Color="{StaticResource BlackDarkColor}"/>
    <SolidColorBrush x:Key="LightGreenBrush" Color="{StaticResource LightGreenColor}"/>
    <SolidColorBrush x:Key="OrangeBrush" Color="{StaticResource OrangeColor}"/>
    <SolidColorBrush x:Key="BlackRowBrush" Color="{StaticResource BlackRowColor}"/>

    <!-- Update existing style resources to use new colors -->
    <SolidColorBrush x:Key="PrimaryBackgroundBrush" Color="{StaticResource BlackPrimaryColor}"/>
    <SolidColorBrush x:Key="SecondaryBackgroundBrush" Color="{StaticResource BlackSecondaryColor}"/>
    <SolidColorBrush x:Key="PrimaryTextBrush" Color="{StaticResource WhiteColor}"/>
    <SolidColorBrush x:Key="SecondaryTextBrush" Color="{StaticResource GrayLightColor}"/>
    <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource PurpleColor}"/>

    <!-- Update ChromeTabStyle -->
    <Style x:Key="ChromeTabStyle" TargetType="RadioButton">
        <Setter Property="Background" Value="{StaticResource BlackGrayDarkBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource GrayLightBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="24,12"/>
        <Setter Property="Margin" Value="0,0,1,0"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Border x:Name="mainBorder" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8,8,0,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{StaticResource BlackSecondaryBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0"/>
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource GrayDarkBrush}"/>
                            <Setter TargetName="mainBorder" Property="Margin" Value="-1,0,-1,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource BlackSecondaryBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="BrowserTabStyle" TargetType="RadioButton">
        <Setter Property="Background" Value="#202123"/>
        <Setter Property="Foreground" Value="#ACACBE"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="Margin" Value="0,0,1,0"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Border x:Name="mainBorder" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4,4,0,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="#2D2D30"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0"/>
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="#3E3E42"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#2D2D30"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabButtonStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#ACACBE"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="15,10"/>
        <Setter Property="Margin" Value="0,0,5,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Border x:Name="border" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5,5,0,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <Border x:Name="selectedBorder" 
                            Height="2" 
                            VerticalAlignment="Bottom" 
                            Background="#3B82F6" 
                            Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Background" Value="#2D2D30"/>
                            <Setter TargetName="selectedBorder" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#2D2D30"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="NoBorderStyle" TargetType="{x:Type Control}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    </Style>

    <Style x:Key="ActionButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#3B82F6"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="20,10"/>
        <Setter Property="Margin" Value="5,0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" 
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="8"
                        Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#2563EB"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#1D4ED8"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Color Scheme -->
    <Color x:Key="PrimaryBackgroundColor">#343541</Color>
    <Color x:Key="SecondaryBackgroundColor">#202123</Color>
    <Color x:Key="PrimaryTextColor">#FFFFFF</Color>
    <Color x:Key="SecondaryTextColor">#D1D5DB</Color>
    <Color x:Key="AccentColor">#3B82F6</Color>
    <Color x:Key="ButtonHoverColor">#2563EB</Color>
    <Color x:Key="ButtonPressedColor">#1D4ED8</Color>

    <!-- Converters -->
    <converters:BoolToColorConverter x:Key="BoolToColorConverter"/>
    <converters:BoolToAlignmentConverter x:Key="BoolToAlignmentConverter"/>
    <converters:BoolToLabelConverter x:Key="BoolToLabelConverter"/>
    <converters:BrightenColorConverter x:Key="BrightenColorConverter"/>
    <converters:DarkenColorConverter x:Key="DarkenColorConverter"/>
    <converters:ColorToColorConverter x:Key="ColorToColorConverter"/>

    <!-- Text Styles -->
    <Style x:Key="BaseTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
    </Style>

    <Style x:Key="SmallTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextStyle}">
        <Setter Property="FontSize" Value="12"/>
    </Style>

    <Style x:Key="MediumTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextStyle}">
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style x:Key="LargeTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextStyle}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>

    <Style x:Key="HeaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextStyle}">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <!-- Button Styles -->
    <Style x:Key="BaseButtonStyle" TargetType="Button">
        <Setter Property="Padding" Value="15,10"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BrightenColorConverter}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DarkenColorConverter}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PrimaryButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
    </Style>

    <Style x:Key="SecondaryButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{StaticResource SecondaryBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
    </Style>

    <Style x:Key="DangerButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="#F44336"/>
    </Style>

    <!-- ListViewItem Style -->
    <Style x:Key="SidebarListViewItemStyle" TargetType="ListViewItem">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
                <Setter Property="Opacity" Value="0.8"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ScrollViewer Style -->
    <Style x:Key="CustomScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ScrollContentPresenter />
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Column="1"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Border Styles -->
    <Style x:Key="StandardBorderStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
    </Style>

    <Style x:Key="ContentBorderStyle" TargetType="Border" BasedOn="{StaticResource StandardBorderStyle}">
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Margin" Value="0,0,0,10"/>
    </Style>

    <!-- Grid Style -->
    <Style x:Key="StandardGridStyle" TargetType="Grid">
        <Setter Property="Margin" Value="10"/>
    </Style>

    <!-- StackPanel Style -->
    <Style x:Key="StandardStackPanelStyle" TargetType="StackPanel">
        <Setter Property="Margin" Value="0,5"/>
    </Style>

    <!-- TextBox Style -->
    <Style x:Key="StandardTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource SecondaryBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" Margin="2"/>
                            <TextBlock IsHitTestVisible="False"
                                       Text="{TemplateBinding Tag}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Left"
                                       Margin="10,0,0,0"
                                       Foreground="DarkGray">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource PrimaryTextBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ToggleButton Style -->
    <Style x:Key="SidebarToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="Transparent" Padding="5">
                        <Path x:Name="ArrowPath" 
                              Data="M0,0 L8,8 L16,0" 
                              Stroke="{StaticResource PrimaryTextBrush}" 
                              StrokeThickness="2"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ArrowPath" Property="Data" Value="M0,8 L8,0 L16,8"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ItemsControl Style -->
    <Style x:Key="StandardItemsControlStyle" TargetType="ItemsControl">
        <Setter Property="Margin" Value="10"/>
    </Style>

    <!-- AvalonEdit TextEditor Style -->
    <Style x:Key="AvalonEditTextEditorStyle" TargetType="avalonedit:TextEditor">
        <Setter Property="FontFamily" Value="Consolas"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="ShowLineNumbers" Value="True"/>
        <Setter Property="Background" Value="{StaticResource SecondaryBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="LineNumbersForeground" Value="#2B91AF"/>
        <Setter Property="Padding" Value="15"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
    </Style>

    <!-- Chat Bubble Style -->
    <Style x:Key="ChatBubbleStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="MaxWidth" Value="300"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
    </Style>

    <!-- Animations -->
    <Storyboard x:Key="FadeIn">
        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                         From="0" To="1" Duration="0:0:0.3"/>
    </Storyboard>
    <Storyboard x:Key="FadeOut">
        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                         From="1" To="0" Duration="0:0:0.3"/>
    </Storyboard>

</ResourceDictionary>